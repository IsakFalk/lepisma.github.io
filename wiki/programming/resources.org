#+TITLE: Resources
#+SETUPFILE: ../../assets/export.setup

This page houses some programming related resources that I have found useful
while working on /anything/. It's starting out jumbled but will get more organized
as I put more things in here.

* Common Lisp
- Use [[https://github.com/roswell/roswell][roswell]] for building command line tools.
- [[https://github.com/takagi/lake][lake]] is a neat make alternative.
- I keep a list of utility packages that I ~:use~ in repl (and shell-ish scripts)
  [[https://github.com/lepisma/cfg/blob/master/pod/package.lisp][here]]. Probably you could use something like [[https://github.com/cl21/cl21][cl21]] but then you would want to
  write packages in cl21 too.
- CL is also great for scripting if you live in the repl. I wrote my workflow
  [[pile:journal:2018/10/07/lisp-shell-scripts][here]].

* Emacs Lisp
- Use [[https://github.com/magnars/s.el][s]], [[https://github.com/magnars/dash.el][dash]], [[https://github.com/rejeep/f.el][f]] and [[https://github.com/Wilfred/ht.el][ht]] while programming in elisp for maximum pleasure.

* Python
- [[https://chrisyeh96.github.io/2017/08/08/definitive-guide-python-imports.html][The Definitive Guide to Python import Statements]] is a neat guide explaining
  the import mess in Python.
- Want more structure in python programs? Use [[https://github.com/ericvsmith/dataclasses][dataclasses]]/[[https://github.com/python-attrs/attrs][attrs]] and [[https://github.com/python/mypy][mypy]].
- [[https://github.com/dgilland/pydash][pydash]] has nice set of high level functions.
- [[https://github.com/mahmoud/glom][glom]] helps in working with nested data.
- For workflow management, I find [[https://snakemake.readthedocs.io/][snakemake]] really useful. Combining it with
  [[https://conda.io/][conda]] gives nice pavement for exploratory projects. +For scripts, [[https://github.com/kennethreitz/pipenv/][pipenv]] is
  probably the cleanest solution+.
- Use [[https://poetry.eustace.io/][poetry]] for developing python libraries and/or scripts. It avoids ~setup.py~
  and its brothers altogether.
- For managing python versions, I have found [[https://github.com/pyenv/pyenv-installer][pyenv]] to be very clean. Along with
  poetry for managing virtualenvs, this helps in closing the loop.
- I like [[https://github.com/docopt/docopt][docopt]] for command line parsing. Even though there are probably valid
  arguments /against/ it, since it's not very popular, I haven't really felt any
  problem with it til now.

* Tools
Few nifty tools. Along with the usual *nix pack, they make so many things really
quick.

- [[http://pandoc.org/][Pandoc]] for document conversion. If you feel like something is off, check out
  [[http://pandoc.org/filters.html][filters]].
- [[https://www.imagemagick.org/script/index.php][imagemagick]] for image manipulation. A lot of image-fu is possible just by
  piping through this.
- [[https://github.com/kohler/gifsicle][gifsicle]] for working with gifs
- [[https://www.ffmpeg.org/][ffmpeg]] for media conversion. Has nice language bindings too (e.g.
  [[https://github.com/kkroening/ffmpeg-python][ffmpeg-python]]).
- [[https://www.graphviz.org/][graphviz]] and [[http://ditaa.sourceforge.net/][ditaa]] for making graphs, flowcharts etc. Both go really nicely in
  org-babel.
- [[https://harelba.github.io/q/][q]] allows running SQL over CSVs.
- [[https://stedolan.github.io/jq/][jq]] for working with json strings in command line.
- +[[https://httpie.org/][HTTPie]] as HTTP client.+ Just use ~curl~. In Emacs, try [[https://github.com/pashky/restclient.el][restclient]] and [[https://github.com/alf/ob-restclient.el][ob-restclient]].
- [[https://github.com/ericchiang/pup][pup]] for working with html strings.
- [[https://rg3.github.io/youtube-dl/][youtube-dl]] for downloading media.
- [[https://aria2.github.io/][aria2]] for downloading the rest. There is an [[https://github.com/LdBeth/aria2.el/][interface]] for Emacs but I haven't used it.
- [[https://github.com/tapio/live-server][live-server]] for avoiding ~python -m SimpleHTTPServer~.
- [[https://ngrok.com][ngrok]] for quickly exposing localhost.
- [[https://github.com/dbcli/pgcli][pgcli]] / [[https://github.com/dbcli/mycli][mycli]] as db cli.
- [[https://github.com/tldr-pages/tldr][tldr]] for quick docs.
- [[https://github.com/BurntSushi/ripgrep][rg]] / [[https://github.com/ggreer/the_silver_searcher][ag]] for searching in code. Spacemacs has nice ag wrappers. 
- [[https://github.com/wireservice/csvkit][csvkit]] for csv-fu. Haven't used it but tools like ~csvcut~ are really nice.
- Command line tools from ~poppler-utils~ can replace almost everything you need
  to do with pdfs.
- [[https://github.com/clibs/entr][entr]] helps in rerunning commands based on file changes.
- [[https://github.com/MaartenBaert/ssr][SimpleScreenRecorder]] does most of the things I want. A few other fancier tools
  I tried don't work very nicely with tiling systems.
- I like [[https://github.com/tobimensch/termsql][termsql]] for working with tabular data in terminal. There might be
  better tools for particular use cases, but in general, just the possibility of
  using plain sql works nicely.
