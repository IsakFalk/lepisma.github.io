#+TITLE: Note Cards
#+SETUPFILE: ../assets/export.setup

#+BEGIN_QUOTE
This page is a work in progress
#+END_QUOTE

(Okay, not exactly cards but I can shuffle entries aroung) Bibliographical
notes. I am realizing their importance /now/ and will be working on this page
fairly regularly.

** TODO 2010 - Physics, topology, logic and computation: a Rosetta Stone
 :PROPERTIES:
  :Custom_ID: baez2010physics
  :AUTHOR: Baez \& Stay
  :JOURNAL: 
  :YEAR: 2010
  :VOLUME: 
  :PAGES: 95--172
  :DOI: 
  :URL: 
 :END:

cite:baez2010physics

Aliquam erat volutpat.  Nunc eleifend leo vitae magna.  In id erat non orci
commodo lobortis.  Proin neque massa, cursus ut, gravida ut, lobortis eget,
lacus.  Sed diam.  Praesent fermentum tempor tellus.  Nullam tempus.  Mauris ac
felis vel velit tristique imperdiet.  Donec at pede.  Etiam vel neque nec dui
dignissim bibendum.  Vivamus id enim.  Phasellus neque orci, porta a, aliquet
quis, semper a, massa.  Phasellus purus.  Pellentesque tristique imperdiet
tortor.  Nam euismod tellus id erat.

** TODO 1997 - A decision-theoretic generalization of on-line learning and an application to boosting
 :PROPERTIES:
  :Custom_ID: freund1997decision
  :AUTHOR: Freund \& Schapire
  :JOURNAL: Journal of computer and system sciences
  :YEAR: 1997
  :VOLUME: 55
  :PAGES: 119--139
  :DOI: 
  :URL: 
 :END:

cite:freund1997decision

Hello world Pellentesque dapibus suscipit ligula.  Donec posuere augue in quam.
Etiam vel tortor sodales tellus ultricies commodo.  Suspendisse potenti.  Aenean
in sem ac leo mollis blandit.  Donec neque quam, dignissim in, mollis nec,
sagittis eu, wisi.  Phasellus lacus.  Etiam laoreet quam sed arcu.  Phasellus at
dui in ligula mollis ultricies.  Integer placerat tristique nisl.  Praesent
augue.  Fusce commodo.  Vestibulum convallis, lorem a tempus semper, dui dui
euismod elit, vitae placerat urna tortor vitae lacus.  Nullam libero mauris,
consequat quis, varius et, dictum id, arcu.  Mauris mollis tincidunt felis.
Aliquam feugiat tellus ut neque.  Nulla facilisis, risus a rhoncus fermentum,
tellus tellus lacinia purus, et dictum nunc justo sit amet elit

** 2009 - The Genuine Sieve of Eratosthenes
 :PROPERTIES:
  :Custom_ID: o2009genuine
  :AUTHOR: O'NEILL
  :JOURNAL: Journal of Functional Programming
  :YEAR: 2009
  :VOLUME: 19
  :PAGES: 95--106
 :END:

This talks about a functional implementation of Sieve of Eratosthenes.
Specifically it debunks the following incorrect implementation:

#+BEGIN_SRC haskell
primes = sieve [2..]
sieve (p : xs) = p : sieve [x | x <− xs, x `mod` p > 0]
#+END_SRC

Then we see correct functional implementations with neat tricks made possible
due to laziness of Haskell. Although slower, there is a list based
implementation by Bird mentioned in the /Epilogue/ which is pretty readable (and
elegant) and follows very closely the following description:

#+BEGIN_SRC
primes = [2, 3, ...] \ [[p², p²+p, ...] for p in primes]
#+END_SRC
